name: Build and Release Nexa UI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    outputs:
      artifact-name: ${{ steps.set-artifact.outputs.name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          cd client
          pyinstaller UI.spec --noconfirm

      - name: Archive Windows EXE
        if: matrix.os == 'windows-latest'
        run: |
          $exe = Get-ChildItem -Path client/dist -Filter *.exe -Recurse | Select-Object -First 1
          Compress-Archive -Path $exe.FullName -DestinationPath nexachat-windows.zip
        shell: pwsh

      - name: Archive macOS App
        if: matrix.os == 'macos-latest'
        run: |
          cd client/dist
          zip -r ../../nexachat-macos.zip NexaChat.app

      - name: Archive Linux Binary
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd client/dist
          tar -czvf ../../nexachat-linux.tar.gz NexaChat

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nexachat-${{ matrix.os }}
          path: |
            nexachat-*.zip
            nexachat-*.tar.gz
          if-no-files-found: ignore

  release:
    name: Release on GitHub
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: |
            artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}